"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    users: [User!]! @paginate(defaultCount: 10)
    user(id: ID @eq): User @find
    articles: [Article!]! @paginate(defaultCount: 10)
    article(id: ID @eq): Article @find
    tasks: [Task!]! @paginate(defaultCount: 5)
    task(id: ID @eq): Task @find
    goals: [Goal!]! @paginate(defaultCount: 5)
    goal(id: ID @eq): Goal @find
}

type Article {
    id: ID!
    title: String!
    body: String!
    image: String!
    user: User! @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}

type Task {
    id: ID!
    title: String!
    description: String
    user: User! @belongsTo
    finished_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
}

type Goal {
    id: ID!
    title: String!
    user: User! @belongsTo
    finished_at: DateTime
    created_at: DateTime!
    updated_at: DateTime!
}

type Mutation {
    createUser(
        name: String! @rules(apply: ["required", "min:3"])
        email: String! @rules(apply: ["required", "email", "unique:users,email"])
        password: String! @rules(apply: ["required", "min:8"])
    ): User @create
    updateUser(
        id: ID! @rules(apply: ["required"])
        name: String @rules(apply: ["min:3"])
        email: String @rules(apply: ["email", "unique:users,email"])
        password: String @rules(apply: ["min:8"])
        avatar: String @rules(apply: ["image"])
    ): User @update
    deleteUser(id: ID! @rules(apply: ["required"])): User @delete

    createArticle(
        title: String! @rules(apply: ["required", "min:3"])
        body: String! @rules(apply: ["required", "min:3"])
        user_id: ID!
        image: String
    ): Article @create
    updateArticle(
        id: ID!
        title: String @rules(apply: ["min:3"])
        body: String @rules(apply: ["min:3"])
        image: String @rules(apply: ["image"])
    ): Article @update
    deleteArticle(id: ID!): Article @delete

    createGoal(
        user_id: ID!
        title: String! @rules(apply: ["required", "min:3"])
        finished_at: DateTime
    ): Goal @create
    updateGoal(
        id: ID!
        title: String! @rules(apply: ["required", "min:3"])
        finished_at: DateTime
    ): Goal @update
    deleteGoal(id: ID!): Goal @delete

    createTask(
        user_id: ID!
        title: String! @rules(apply: ["required", "min:3"])
        description: String @rules(apply: ["nullable", "min:3"])
        finished_at: DateTime
    ): Task @create
    updateTask(
        id: ID!
        title: String @rules(apply: ["min:3"])
        description: String @rules(apply: ["nullable", "min:3"])
        finished_at: DateTime
    ): Task @update
    deleteTask(id: ID!): Task @delete
}

type User {
    id: ID!
    name: String!
    email: String!
    avatar: String!
    articles: [Article!]! @hasMany
    tasks: [Task!]! @hasMany
    goals: [Goal!]! @hasMany
    created_at: DateTime!
    updated_at: DateTime!
}
